/*==========================================================================
#       COPYRIGHT NOTICE
#       Copyright (c) 2015
#       All rights reserved
#
#       @author       :Ling hao
#       @qq           :119642282@qq.com
#       @file         :/home/lhw4d4/project/git/rmfsystem\scan.c
#       @date         :2015/10/25 18:58
#       @algorithm    :
==========================================================================*/
#include<errno.h>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<unistd.h>
#include<fcntl.h>
#include<sys/select.h>
#include<sys/ioctl.h>
#include<sys/time.h>
#include<sys/types.h>
#include<netinet/in.h>
#include<sys/socket.h>
#include<arpa/inet.h>
#define TCP_PORT 10000

#define MAXSIZE 100

int sock_connect(char *address)
{
	
	flag=fcntl()
}


int scanip()
{
	int sockfd,n,i,length,maxfd,flag;
	int my;
	char address[20];
	struct timeval timeout;
	fd_set rest,west;
	struct sockaddr_in servaddr,peersock;
	length=sizeof(peersock);
	int  error=0;
	read_file("PLC_INFO","address",address);
	printf("address=%s\n",address);
	if(strlen(address)>7)
	{
		sockfd=socket(AF_INET,SOCK_STREAM,0);
		bzero(&servaddr,sizeof(servaddr));
		servaddr.sin_family=AF_INET;
		servaddr.sin_port=htons(TCP_PORT);
		servaddr.sin_addr.s_addr=inet_addr(address);
			

	}

	/*quite important!timeout must be set in the loop
	 because every loop will flush  the structure*/
//	timeout.tv_sec=2;
//	timeout.tv_usec=0;
	printf("scan begin!~~~~~~~~~~~\n");	
	for(i=1;i<255;i++)
	{
		
	}
done:
	if(i<255)
	{
		flag=fcntl(sockfd,F_GETFL,0);
		fcntl(sockfd,F_SETFL,flag&~O_NONBLOCK);
		printf("scan successfully!\naddr:%s\nport:%d\n",address,TCP_PORT);
		return sockfd;
	}
}


int main()
{
	int sockfd;
	sockfd=scanip();
}
